<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[实用的图床上传工具-PicGo]]></title>
    <url>%2Farchives%2F5af88fad.html</url>
    <content type="text"><![CDATA[博客写多了，有了图片加载慢的问题。这里分享一个简单实用的图床上传工具——PicGo此工具可以一键上传图片，对于编写博客和网站来说很有帮助。 背景刚开始学习网页前端和博客搭建的时候，自己按照网上的教程一步步地学习。但后来，总会遇到一个问题： 随着网页一步步地完善，图片也越来越多，图片的杂余，使得打开一个页面的时候，总会非常的缓慢（将大部分时间都花在了图片的加载上） 为什么会这样呢原来，随着图片的增多，服务器的压力就会加大，加载网页代码的同时，也会加载图片，然而图片常常很大（几百K到5M大小不等），会有一个很长的加载过程。 怎么改进呢后来，我了解到可以通过CDN的方式来减轻服务器的压力。 PS:何为CDN？CDN简单通俗地来说，就是通过外链的方式，将脚本、图片、视频等文件链接到自己的服务器，这样，将占用自己服务器资源的文件放在其他的服务器中，以达到网页加速的目的。 国内有很多CDN的提供商，例如阿里云、腾讯云、七牛云、又拍云（其中七牛云和又拍云提供定量的免费储存空间）。 开始，我使用的是七牛云的对象储存空间，七牛云有10G的免费空间,但是有一个不便却来了：我需要每次打开七牛的管理后台，手动上传之后，再把链接复制下来，引用到我的博客文章中。这样效率真的很低下，使得图片上传的不便。 偶然一次的发现——图床工具PS:何为图床？图床简单来讲就是图片托管和储存地，即前面所说的CDN提供商（他们既有CDN又有对象存储，即图床）。 PicGo软件下载链接：https://picgo.github.io/PicGo-Doc/zh/guide/Github: https://github.com/Molunerfinn/PicGo 在这里，我们可以选择SM.MS、腾讯云、微博、Github、七牛、Imgur、阿里云和又拍云多种方式上传。上传后，可以自动得到复制链接，粘贴到文章里面即可(oﾟ▽ﾟ)o 这里，强力推荐SM.MS，免费而且速度又快，真的是不二之选！！！！ 就到这里啦，下次更新ヾ(◍°∇°◍)ﾉﾞ document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>小工具</category>
      </categories>
      <tags>
        <tag>图床</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2019电赛准备阶段学习总结]]></title>
    <url>%2Farchives%2Ff10b0e1a.html</url>
    <content type="text"><![CDATA[第二年参加电赛了，今年来到测控无人机方向，主要记录一些学习经历。再苦逼也要加油呀！！！ 2019.7.18更新最近，我们组在紧张地准备电赛测控四旋翼无人机的题目，在准备过程中，我们购买了无名创新的TM4C123的飞控，正在研究源码和视觉模块的运用。无名创新的飞控是开源的，在B站上面有对应的讲解视频，涉及操作类和代码讲解类的视频，下面附上其网址： 无名科创开源飞控QQ群：540707961CSDN博客优酷ID：NamelessCotrun无名小哥B站教学视频客户使用心得、改进意见征集贴淘宝店铺百度贴吧:无名科创开源飞控公司官网 我们组在学习的过程中，按照老师给的建议，决定采用外加一个TM4C123的控制板作为模拟的遥控器（即脱掉遥控器自主飞行降落），其中，无名的飞控是采用PPM信号编码和解码的方式，为了模仿遥控器的信号，我们参考了网上的一些文档，觉得十分有用： PPM原理和代码https://blog.csdn.net/Aaron_Suen/article/details/79416477https://blog.csdn.net/yibu_refresh/article/details/45752131 2019.7.26更新这几天我们队进度有点卡顿了，正在向两方面进展。我们准备了两个方案：使用之前所说的外置模拟遥控器的方式使用无名飞控自带的SDK模式进行二次开发 与此时同，我开始研究OpenMV视觉模块，OpenMV是基于嵌入式STM32单片机的基础上，经过层层封装之后，运用microPython语法开发的模块。（我们用的是OpenMV mini板） OpenMV寻找直角由于电赛视觉模块寻迹的原因，可能会涉及无人机直角转弯的问题，通过查找网上资料，获得了如下Python代码,感觉有一定的参考价值： 通过这个程序，我发现可以调用calculate_angle(line1, line2)函数得出偏角值，调用calculate_intersection(line1, line2)函数得出当前x和y的坐标值(cross_x, cross_y)，这样，再通过串口将对应的数据帧发送给飞控，在飞控端再进行帧格式解析，得出对应的数据后，在进行飞机相应的姿态调整。 123456def calculate_angle(line1, line2): # 利用四边形的角公式， 计算出直线夹角 angle = (180 - abs(line1.theta() - line2.theta())) if angle > 90: angle = 180 - angle return angle 123456789101112131415def calculate_intersection(line1, line2): # 计算两条线的交点 a1 = line1.y2() - line1.y1() b1 = line1.x1() - line1.x2() c1 = line1.x2()*line1.y1() - line1.x1()*line1.y2() a2 = line2.y2() - line2.y1() b2 = line2.x1() - line2.x2() c2 = line2.x2() * line2.y1() - line2.x1()*line2.y2() if (a1 * b2 - a2 * b1) != 0 and (a2 * b1 - a1 * b2) != 0: cross_x = int((b1*c2-b2*c1)/(a1*b2-a2*b1)) cross_y = int((c1*a2-c2*a1)/(a1*b2-a2*b1)) return (cross_x, cross_y) return (-1, -1) 下面附上完整源代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145# Find Lines Example## This example shows off how to find lines in the image. For each line object# found in the image a line object is returned which includes the line's rotation.# Note: Line detection is done by using the Hough Transform:# http://en.wikipedia.org/wiki/Hough_transform# Please read about it above for more information on what `theta` and `rho` are.# find_lines() finds infinite length lines. Use find_line_segments() to find non-infinite lines.enable_lens_corr = False # turn on for straighter lines...import sensor, image, timesensor.reset()sensor.set_pixformat(sensor.GRAYSCALE) # grayscale is fastersensor.set_framesize(sensor.QQVGA)sensor.skip_frames(time = 2000)clock = time.clock()# min_degree = 0 # 直线最小角度# max_degree = 179 # 直线最大角度# 判断是否为直角的阈值right_angle_threshold = (70, 90)binary_threshold = [(0, 60)]forget_ratio = 0.8move_threshold = 5def calculate_angle(line1, line2): # 利用四边形的角公式， 计算出直线夹角 angle = (180 - abs(line1.theta() - line2.theta())) if angle > 90: angle = 180 - angle return angledef is_right_angle(line1, line2): global right_angle_threshold # 判断两个直线之间的夹角是否为直角 angle = calculate_angle(line1, line2) if angle >= right_angle_threshold[0] and angle = 2: (line1, line2) = find_verticle_lines(lines) if (line1 == None or line2 == None): # 没有垂直的直线 draw_cross_point(old_cross_x, old_cross_y) continue # 画线 # img.draw_line(line1.line(), color = (255, 0, 0)) # img.draw_line(line2.line(), color = (255, 0, 0)) # 计算交点 (cross_x, cross_y) = calculate_intersection(line1, line2) print("cross_x: %d, cross_y: %d"%(old_cross_x, old_cross_y)) if cross_x != -1 and cross_y != -1: if abs(cross_x - old_cross_x) < move_threshold and abs(cross_y - old_cross_y) < move_threshold: # 小于移动阈值， 不移动 pass else: old_cross_x = int(old_cross_x * (1 - forget_ratio) + cross_x * forget_ratio) old_cross_y = int(old_cross_y * (1 - forget_ratio) + cross_y * forget_ratio) draw_cross_point(old_cross_x, old_cross_y) print("FPS %f" % clock.fps())# About negative rho values:## A [theta+0:-rho] tuple is the same as [theta+180:+rho]. 这里附上源代码链接。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>培训学习</category>
      </categories>
      <tags>
        <tag>电赛</tag>
        <tag>OpenMV</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[你好鸭~]]></title>
    <url>%2Farchives%2Ff2d5fff6.html</url>
    <content type="text"><![CDATA[你好！这里是Sublime的个人小屋哦ヾ(◍°∇°◍)ﾉﾞ从今天起，我准备开始写博客啦~希望大家支持我呀^_^ 1printf("hello world, hello my blog!"); 1cout { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>杂记</category>
      </categories>
  </entry>
</search>
